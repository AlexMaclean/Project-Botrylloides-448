#!/bin/bash

CONFIG_FILE=jf-size.conf
DATA_FILE=data.csv

ASSEMBLE=/home/ubuntu/Project-Botrylloides-448/scripts/assemble-with-stats

#-------------------------------------------------------------------------------

# Top level function to run experiment, just loops through k running trials
function run-experiment {
    # Add the header to the output data.csv
    HEADER=$($ASSEMBLE header)
    echo "jf size,$HEADER" > $DATA_FILE

    for S in $(eval echo "{1000000..4000000..1000000}")
    do
        run-trial "$S"
    done
    for S in $(eval echo "{5000000..200000000..5000000}")
    do
        run-trial "$S"
    done
}

# Given a jf size value runs a timed version of MaSurCa on it and record stats
function run-trial {
    JF=$1
    OUT_PATH="jf-$JF-hash-trial"

    printf '\e[1;7m%-6s\e[m\ue0b0\n' " Running the $JF Hash Size Trial "

    # Change the contig file so it has the right jf size value
    sed -i "s/JF_SIZE =.*/JF_SIZE = $JF/g" $CONFIG_FILE

    masurca $CONFIG_FILE || exit 1

    mkdir "$OUT_PATH"
    mv assemble.sh "$OUT_PATH"/
    cd "$OUT_PATH" || return

    STATS=$($ASSEMBLE)
    cd ..
    echo "$JF,$STATS" >> $DATA_FILE
}

run-experiment
